sudo: required
services:
  - docker

# build dev version to run all test on react app image
before_install:
  - docker build -t boonsiangteh/react-test -f ./client/Dockerfile.dev ./client

# run test and add "-- --coverage" to automatically exit after finishing test (default npm test does not exit)
script:
  - docker run boonsiangteh/react-test npm test -- --coverage

# build prod version images for all components after tests successful and push to dockerhub
after_success:
  - docker build -t boonsiangteh/multi-client ./client
  - docker build -t boonsiangteh/multi-nginx ./nginx
  - docker build -t boonsiangteh/multi-server ./server
  - docker build -t boonsiangteh/multi-worker ./worker
  # Login to docker cli (this is used to login to our dockerhub account)
  # (echo our env variable DOCKER_PASSWORD and pipe into docker login command as stdin )
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # push all our images to dockerhub
  - docker push boonsiangteh/multi-client
  - docker push boonsiangteh/multi-nginx
  - docker push boonsiangteh/multi-server
  - docker push boonsiangteh/multi-worker

# perform configuration for deployment to AWS Elastic Beanstalk service
# deploy:
#   provider: elasticbeanstalk
#   region: ap-southeast-1
#   app: multi-container-docker
#   env: MultiContainerDocker-env
#   # this is the S3 bucket which will be generated for us when we start elastic beanstalk instance
#   bucket_name: elasticbeanstalk-ap-southeast-1-527637964781
#   # a bucket folder with the name of our app will be created for us in the list of S3 buckets when we deploy our app
#   bucket_path: multi-container-docker
#   # only do deployment whenever we push to master branch
#   on:
#     branch: master
#   access_key_id: $AWS_ACCESS_KEY
#   secret_access_key:
#     secure: $AWS_SECRET_KEY
